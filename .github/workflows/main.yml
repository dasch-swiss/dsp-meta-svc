name: CI

on:
  push:
  release:
    types: [published]

jobs:
  # test always and publish on release
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: install requirements
        run: sudo apt-get update && sudo apt-get install ca-certificates-java expect --fix-missing
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Install dependencies
        run: |
          npm install --global @bazel/bazelisk
      - name: Install Metadata Converter
        run: |
          make install-metadata-tool
      - name: Run Metadata Conversion
        run: |
          make convert-metadata
      - name: cache maven artifacts
        uses: actions/cache@v1
        with:
          path: ~/.ivy2
          key: ${{ runner.OS }}-build-${{ hashFiles('**/KnoraBuild.sbt') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Build everything
        run: |
          make test
      - name: Publish to Dockerhub
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
          make docker-publish

  release-please:
    name: Prepare next release
    runs-on: ubuntu-latest
    # Automate releases with Conventional Commit Messages as Pull Requests are merged into "main" branch
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: simple
          package-name: dsp-repository
          changelog-types: '[{"type": "feat","section": "Enhancements","hidden": false }, {"type": "fix","section": "Bug Fixes","hidden": false }, {"type": "chore","section": "Maintenance","hidden": false }, {"type": "docs","section": "Documentation","hidden": false }]'

  # google chat notification about release
  notification:
    name: Google chat notification about release and published version
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Send notification to google chat room "DSP releases"
        uses: lakto/google-chat-action@main
        with:
          url: ${{ secrets.GOOGLE_CHAT_DSP_RELEASES_WEBHOOK_URL }}
